// Simple texture map shader

// World-view-projection transformation.
uniform mat4 gWVPXf : WorldViewProjection;


// Vertex shader input structure.
attribute VS_INPUT
{
  vec3 Pos : POSITION;
  vec2 inUV : TEXCOORD0;
}

// Vertex shader output structure.
attribute VS_TO_PS
{
  // The vertex position in clip space.
  vec2 UV;
}

attribute pixelOut 
{
  vec4 colorOut:COLOR0;
}

// Vertex shader.
GLSLShader VS
{
  void main()
  {		
    gl_Position = gWVPXf * vec4(Pos, 1);
    UV =  inUV;
  }
}

// Pixel shader for normal visualization.
GLSLShader PS
{
  void main()
  {
    colorOut = vec4(0, 0, 0, 0);
  }
}

// Techniques.
technique Main
<
//tell Maya to support transparency for this technique
string Transparency = "Transparent";
>
{
  pass p0
  {
    VertexShader (in VS_INPUT, out VS_TO_PS) = VS;
    PixelShader (in VS_TO_PS, out pixelOut) = PS;
  }
}


